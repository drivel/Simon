{"version":3,"sources":["index.js"],"names":["console","clear","interval","simon","document","querySelector","btns","querySelectorAll","green","red","blue","yellow","bops","userBops","forEach","btn","addEventListener","e","classes","target","classList","contains","push","log","checkBops","play","Math","round","random","bop","index","setTimeout","add","remove","length","slice"],"mappings":";AACAA,QAAQC,QAER,IAAMC,EAAW,IAEXC,EAAQC,SAASC,cAAc,UAE/BC,EAAOH,EAAMI,iBAAiB,QAE9BC,EAAQL,EAAME,cAAc,UAC5BI,EAAMN,EAAME,cAAc,QAC1BK,EAAOP,EAAME,cAAc,SAC3BM,EAASR,EAAME,cAAc,WAE/BO,EAAO,GACPC,EAAW,GAEfP,EAAKQ,QAAQ,SAACC,GACbA,EAAIC,iBAAiB,QAAS,SAACC,GACxBC,IAAAA,EAAUD,EAAEE,OAAOC,UAElB,QAAA,GACDF,KAAAA,EAAQG,SAAS,SACrBR,EAASS,KAAK,GACdtB,QAAQuB,IAAIV,GACZ,MACIK,KAAAA,EAAQG,SAAS,OACrBR,EAASS,KAAK,GACdtB,QAAQuB,IAAIV,GACZ,MACIK,KAAAA,EAAQG,SAAS,UACrBR,EAASS,KAAK,GACdtB,QAAQuB,IAAIV,GACZ,MACIK,KAAAA,EAAQG,SAAS,QACrBR,EAASS,KAAK,GACdtB,QAAQuB,IAAIV,GAGdW,gBAIFC,KAAO,WACNZ,EAAW,GACXD,EAAKU,KAAKI,KAAKC,MAAsB,EAAhBD,KAAKE,WAE1B5B,QAAQuB,IAAIX,GAEZA,EAAKE,QAAQ,SAACe,EAAKC,GAElBC,WAAW,WACVzB,EAAKuB,GAAKT,UAAUY,IAAI,UAExBD,WAAW,WACVzB,EAAKuB,GAAKT,UAAUa,OAAO,WACxB/B,EAAW,IACZ4B,EAAS5B,MAKfuB,OAEAD,UAAY,WACPX,EAASqB,OAAStB,EAAKsB,OACtBrB,EAASsB,OAAO,GAAG,KAAOvB,EAAKC,EAASqB,OAAO,GAClDlC,QAAQuB,IAAI,gBAEZvB,QAAQuB,IAAI,aAEZX,EAAO,GACPa,SAIDzB,QAAQuB,IAAI,cACZE","file":"src.1e1e790c.js","sourceRoot":"..\\src","sourcesContent":["// TODO dev-mode only\r\nconsole.clear();\r\n\r\nconst interval = 1000;\r\n\r\nconst simon = document.querySelector(\".simon\");\r\n\r\nconst btns = simon.querySelectorAll(\".btn\");\r\n\r\nconst green = simon.querySelector(\".green\");\r\nconst red = simon.querySelector(\".red\");\r\nconst blue = simon.querySelector(\".blue\");\r\nconst yellow = simon.querySelector(\".yellow\");\r\n\r\nlet bops = [];\r\nlet userBops = [];\r\n\r\nbtns.forEach((btn) => {\r\n\tbtn.addEventListener(\"click\", (e) => {\r\n\t\tconst classes = e.target.classList;\r\n\r\n\t\tswitch(true) {\r\n\t\t\tcase classes.contains(\"green\"):\r\n\t\t\t\tuserBops.push(0);\r\n\t\t\t\tconsole.log(userBops);\r\n\t\t\t\tbreak;\r\n\t\t\tcase classes.contains(\"red\"):\r\n\t\t\t\tuserBops.push(1);\r\n\t\t\t\tconsole.log(userBops);\r\n\t\t\t\tbreak;\r\n\t\t\tcase classes.contains(\"yellow\"):\r\n\t\t\t\tuserBops.push(2);\r\n\t\t\t\tconsole.log(userBops);\r\n\t\t\t\tbreak;\r\n\t\t\tcase classes.contains(\"blue\"):\r\n\t\t\t\tuserBops.push(3);\r\n\t\t\t\tconsole.log(userBops);\r\n\t\t}\r\n\r\n\t\tcheckBops();\r\n\t});\r\n});\r\n\r\nplay = () => {\r\n\tuserBops = [];\r\n\tbops.push(Math.round(Math.random() * 3));\r\n\r\n\tconsole.log(bops);\r\n\r\n\tbops.forEach((bop, index) => {\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tbtns[bop].classList.add(\"active\");\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tbtns[bop].classList.remove(\"active\");\r\n\t\t\t}, (interval / 2))\r\n\t\t}, (index) * interval);\r\n\r\n\t});\r\n};\r\n\r\nplay();\r\n\r\ncheckBops = () => {\r\n\tif (userBops.length < bops.length) {\r\n\t\tif (userBops.slice(-1)[0] === bops[userBops.length-1]) {\r\n\t\t\tconsole.log(\"good so far\");\r\n\t\t} else {\r\n\t\t\tconsole.log(\"game over\");\r\n\r\n\t\t\tbops = [];\r\n\t\t\tplay();\r\n\t\t}\r\n\t} else {\r\n\t\t// TODO next round\r\n\t\tconsole.log(\"next round\");\r\n\t\tplay();\r\n\t}\r\n};"]}